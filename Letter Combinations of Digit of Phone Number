public:
   void solver( vector<string>&ans, string digits, vector<string>&mapping, string output,int index){
     //base case

     if(index>=digits.length()){
         ans.push_back(output);
         return;
     }

     int digit = digits[index] -'0';
     string value = mapping[digit];

     for(int i=0;i<value.length();i++){
         char ch = value[i];
         output.push_back(ch);

         solver(ans,digits,mapping,output,index+1);

         output.pop_back();
     }
   }
    vector<string> letterCombinations(string digits) {
      vector<string>mapping(10);
      mapping[2] = "abc";
      mapping[3] = "def" ;
      mapping[4] = "ghi" ;
      mapping[5] = "jkl"; 
      mapping[6] = "mno"; 
      mapping[7] = "pqrs"; 
      mapping[8] = "tuv" ;
      mapping[9] = "wxyz"; 
       
     vector<string>ans;
    string output=  "";

    if(digits.length()==0){
        return ans;
    }

    solver(ans,digits,mapping,output,0);
    

    return ans;
    }
};
